{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\FirstReactApp\\\\first-react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Post from \"./components/Post\";\nimport NotTweets from \"./components/NotTweets\";\nimport Refresh from \"./components/Refresh\";\n\nfunction App() {\n  _s();\n\n  const [notTweets, setTweets] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tweetsFromServer = await fetchTweets();\n      setTweets(tweetsFromServer);\n      console.log(tweetsFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTweets = async () => {\n    const res = await fetch(`http://14.201.198.86:5000/api/posts`);\n    const data = await res.json();\n    return data;\n  };\n\n  const post = async text => {\n    const res = await fetch(`http://14.201.198.86:5000/api/posts`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: text\n      })\n    });\n    const data = await res.json();\n    setTweets([data, ...notTweets]);\n  };\n\n  const refresh = async () => {\n    setTweets([]);\n    console.log(\"refreshed\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"not twitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Post, {\n      placeholder: \"what's not happening?\",\n      onAdd: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NotTweets, {\n      notTweets: notTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Refresh, {\n      onClick: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"VNISEfzUm1WWjYBTTWkMLzBtbpo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/FirstReactApp/first-react-app/src/App.js"],"names":["useState","useEffect","Header","Post","NotTweets","Refresh","App","notTweets","setTweets","getTasks","tweetsFromServer","fetchTweets","console","log","res","fetch","data","json","post","text","method","headers","body","JSON","stringify","content","refresh"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,QAAQ,GAAG,YAAY;AAC5B,YAAMC,gBAAgB,GAAG,MAAMC,WAAW,EAA1C;AACAH,MAAAA,SAAS,CAACE,gBAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACA,KAJD;;AAMAD,IAAAA,QAAQ;AACR,GARQ,EAQN,EARM,CAAT;;AAUA,QAAME,WAAW,GAAG,YAAY;AAC/B,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,qCAAF,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACA,GALD;;AAOA,QAAME,IAAI,GAAG,MAAOC,IAAP,IAAgB;AAC5B,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,qCAAF,EAAwC;AAC9DK,MAAAA,MAAM,EAAE,MADsD;AAE9DC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFqD;AAK9DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,OAAO,EAAEN;AAAX,OAAf;AALwD,KAAxC,CAAvB;AAQA,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAT,IAAAA,SAAS,CAAC,CAACQ,IAAD,EAAO,GAAGT,SAAV,CAAD,CAAT;AACA,GAXD;;AAaA,QAAMmB,OAAO,GAAG,YAAY;AAC3BlB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,IAAD;AAAM,MAAA,WAAW,EAAC,uBAAlB;AAA0C,MAAA,KAAK,EAAEK;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEmB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;GA7CQpB,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Post from \"./components/Post\";\nimport NotTweets from \"./components/NotTweets\";\nimport Refresh from \"./components/Refresh\";\n\nfunction App() {\n\tconst [notTweets, setTweets] = useState([]);\n\tuseEffect(() => {\n\t\tconst getTasks = async () => {\n\t\t\tconst tweetsFromServer = await fetchTweets();\n\t\t\tsetTweets(tweetsFromServer);\n\t\t\tconsole.log(tweetsFromServer);\n\t\t};\n\n\t\tgetTasks();\n\t}, []);\n\n\tconst fetchTweets = async () => {\n\t\tconst res = await fetch(`http://14.201.198.86:5000/api/posts`);\n\t\tconst data = await res.json();\n\n\t\treturn data;\n\t};\n\n\tconst post = async (text) => {\n\t\tconst res = await fetch(`http://14.201.198.86:5000/api/posts`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ content: text }),\n\t\t});\n\n\t\tconst data = await res.json();\n\t\tsetTweets([data, ...notTweets]);\n\t};\n\n\tconst refresh = async () => {\n\t\tsetTweets([]);\n\t\tconsole.log(\"refreshed\");\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header text='not twitter' />\n\t\t\t<Post placeholder=\"what's not happening?\" onAdd={post} />\n\t\t\t<NotTweets notTweets={notTweets}></NotTweets>\n\t\t\t<Refresh onClick={refresh}></Refresh>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}