{"version":3,"sources":["components/Header.js","components/Post.js","components/NotATweet.js","components/NotTweets.js","components/Refresh.js","App.js","reportWebVitals.js","index.js"],"names":["Header","text","Post","placeholder","onAdd","useState","setText","onSubmit","e","preventDefault","alert","className","value","onChange","target","NotATweet","notTweets","content","NotTweets","map","notTweet","index","Refresh","onClick","App","setTweets","useEffect","a","fetchTweets","tweetsFromServer","console","log","getTweets","fetch","res","json","data","post","method","headers","body","JSON","stringify","refresh","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAQeA,EARA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACC,iCACC,6BAAKA,OC2BOC,EA5BF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAAY,EAChBC,mBAAS,IADO,mBACjCJ,EADiC,KAC3BK,EAD2B,KAexC,OACC,uBAAMC,SAdU,SAACC,GACjBA,EAAEC,iBAEGR,GAKLG,EAAMH,GAENK,EAAQ,KANPI,MAAM,4BAUP,UACC,0BACCC,UAAU,eACVR,YAAaA,EACbS,MAAOX,EACPY,SAAU,SAACL,GAAD,OAAOF,EAAQE,EAAEM,OAAOF,UAEnC,sDCfYG,EARG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpB,OACC,qBAAKL,UAAU,0BAAf,SACC,mCAAMK,EAAUC,cCWJC,EAdG,SAAC,GAAmB,IAAjBF,EAAgB,EAAhBA,UACpB,OACC,mCACEA,EAAUG,KAAI,SAACC,EAAUC,GAAX,OACd,cAAC,EAAD,CACCV,UAAU,0BAEVK,UAAWI,GADNC,SCEKC,EAVC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACC,8BACC,wBAAQZ,UAAU,MAAMY,QAASA,EAAjC,wBCkDYC,MA/Cf,WAAgB,IAAD,EACiBnB,mBAAS,IAD1B,mBACPW,EADO,KACIS,EADJ,KAEdC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACcC,IADd,OACXC,EADW,OAEjBJ,EAAUI,GACVC,QAAQC,IAAIF,GAHK,2CAAH,qDAMfG,KACE,IAEH,IAAMJ,EAAW,uCAAG,8BAAAD,EAAA,sEACDM,MAAM,uCADL,cACbC,EADa,gBAEAA,EAAIC,OAFJ,cAEbC,EAFa,yBAIZA,GAJY,2CAAH,qDAOXC,EAAI,uCAAG,WAAOpC,GAAP,iBAAA0B,EAAA,sEACMM,MAAM,sCAAuC,CAC9DK,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CAAEzB,QAAShB,MANrB,cACNiC,EADM,gBASOA,EAAIC,OATX,OASNC,EATM,OAUZX,EAAU,CAACW,GAAF,mBAAWpB,KAVR,2CAAH,sDAaJ2B,EAAO,uCAAG,sBAAAhB,EAAA,sDACfF,EAAU,CAACT,IACXc,QAAQC,IAAI,aAFG,2CAAH,qDAKb,OACC,sBAAKpB,UAAU,MAAf,UACC,cAAC,EAAD,CAAQV,KAAK,gBACb,cAAC,EAAD,CAAME,YAAY,wBAAwBC,MAAOiC,IACjD,cAAC,EAAD,CAAWrB,UAAWA,IACtB,cAAC,EAAD,CAASO,QAASoB,QCpCNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c2fdf5c7.chunk.js","sourcesContent":["const Header = ({ text }) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>{text}</h1>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nconst Post = ({ placeholder, onAdd }) => {\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!text) {\r\n\t\t\talert(\"please add text to post\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonAdd(text);\r\n\r\n\t\tsetText(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<textarea\r\n\t\t\t\tclassName='text-content'\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={text}\r\n\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button> dont tweet </button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst NotATweet = ({ notTweets }) => {\r\n\treturn (\r\n\t\t<div className='text-content not-tweets'>\r\n\t\t\t<h3> {notTweets.content}</h3>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotATweet;\r\n","import NotATweet from \"./NotATweet\";\r\n\r\nconst NotTweets = ({ notTweets }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{notTweets.map((notTweet, index) => (\r\n\t\t\t\t<NotATweet\r\n\t\t\t\t\tclassName='text-content not-tweets'\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tnotTweets={notTweet}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default NotTweets;\r\n","const Refresh = ({ onClick }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button className='btn' onClick={onClick}>\r\n\t\t\t\tRefresh\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Refresh;\r\n","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Post from \"./components/Post\";\nimport NotTweets from \"./components/NotTweets\";\nimport Refresh from \"./components/Refresh\";\n\nfunction App() {\n\tconst [notTweets, setTweets] = useState([]);\n\tuseEffect(() => {\n\t\tconst getTweets = async () => {\n\t\t\tconst tweetsFromServer = await fetchTweets();\n\t\t\tsetTweets(tweetsFromServer);\n\t\t\tconsole.log(tweetsFromServer);\n\t\t};\n\n\t\tgetTweets();\n\t}, []);\n\n\tconst fetchTweets = async () => {\n\t\tconst res = await fetch(`http://14.201.198.86:5000/api/posts`);\n\t\tconst data = await res.json();\n\n\t\treturn data;\n\t};\n\n\tconst post = async (text) => {\n\t\tconst res = await fetch(`http://14.201.198.86:5000/api/posts`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ content: text }),\n\t\t});\n\n\t\tconst data = await res.json();\n\t\tsetTweets([data, ...notTweets]);\n\t};\n\n\tconst refresh = async () => {\n\t\tsetTweets([notTweets]);\n\t\tconsole.log(\"refreshed\");\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header text='not twitter' />\n\t\t\t<Post placeholder=\"what's not happening?\" onAdd={post} />\n\t\t\t<NotTweets notTweets={notTweets}></NotTweets>\n\t\t\t<Refresh onClick={refresh}></Refresh>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}